# Optimized Dockerfile for VibeVoice RunPod Serverless
# This version fixes the major deployment issues

FROM runpod/pytorch:2.2.0-py3.10-cuda12.1.1-devel-ubuntu22.04

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    ffmpeg \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Clone VibeVoice repository
RUN git clone https://github.com/microsoft/VibeVoice.git /app/VibeVoice

# Set working directory to VibeVoice
WORKDIR /app/VibeVoice

# First copy requirements.txt for better caching
COPY requirements.txt /app/requirements.txt

# Install dependencies from requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# Pre-download the VibeVoice-1.5B model (smaller, faster deployment) from Hugging Face
ENV HF_HUB_CACHE=/app/cache
ENV HF_HOME=/app/cache
ENV TRANSFORMERS_CACHE=/app/cache

RUN mkdir -p /app/models /app/cache

# Download model with better error handling and progress tracking
RUN python -c "from huggingface_hub import snapshot_download; print('Downloading VibeVoice-1.5B model (~1.5B parameters)...'); snapshot_download(repo_id='microsoft/VibeVoice-1.5B', local_dir='/app/models/VibeVoice-Large', cache_dir='/app/cache', ignore_patterns=['*.git*', 'README.md']); print('VibeVoice-1.5B model downloaded successfully!')"

# Copy the serverless handler
COPY handler.py /app/handler.py

# Set environment variables
ENV MODEL_PATH=/app/models/VibeVoice-Large
ENV PYTHONPATH=/app/VibeVoice:/app
ENV TRANSFORMERS_CACHE=/app/cache
ENV HF_HOME=/app/cache
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import torch; print('GPU available:', torch.cuda.is_available())" || exit 1

# Set the handler as the entry point
CMD ["python", "/app/handler.py"]